{
  "version": "7.1.77",
  "release_date": "2025-09-30",
  "description": "Enhancement - Added search filter to SIGMA Rules page for finding and managing rules by title, level, or category with partial matching",
  "build": "production",
  "changelog": {
    "7.1.1": "Initial release - Core architecture, user management, case framework",
    "7.1.2": "Bugfix - Fixed requirements.txt copying and added fallback dependency installation",
    "7.1.3": "Bugfix - Fixed database path to absolute, improved service status checks, added Nginx troubleshooting",
    "7.1.4": "Bugfix - Fixed OpenSearch demo config issues, updated python-evtx to 0.8.1, disabled security plugin properly",
    "7.1.5": "Bugfix - Fixed OpenSearch temp directory creation, ensures all required directories exist",
    "7.1.6": "Bugfix - Fixed OpenSearch startup timeouts, optimized config, disabled unnecessary plugins, dynamic heap sizing",
    "7.1.7": "Enhancement - Comprehensive installer verbosity, detailed service monitoring, API response verification, extensive troubleshooting guidance",
    "7.1.8": "Bugfix - Fixed OpenSearch 2.11.1 compatibility by removing invalid plugin settings causing AbstractScopedSettings errors",
    "7.1.9": "Bugfix - Simplified OpenSearch config to minimal safe settings, removed all problematic plugin configurations",
    "7.1.10": "Performance - Major startup optimization: JIT compiler tuning, G1GC optimization, system limits, cache tuning, logging reduction",
    "7.1.11": "Bugfix - Fixed JVM experimental flags ordering, enhanced clean install to completely remove all services and data",
    "7.1.12": "Bugfix - Fixed installation order to recreate directories after cleanup, optimized heap sizing (4GB for 8GB RAM, 6GB for 16GB RAM)",
    "7.1.13": "Debug - Enhanced application file copying with comprehensive diagnostics and error reporting",
    "7.1.14": "UI - Enhanced dashboard with sidebar menu, service status indicators, and clear distinction between working features and development placeholders",
    "7.1.15": "Bugfix - Smart application file discovery, searches current dir, parent dir, and user directories with clear error guidance",
    "7.1.16": "Bugfix - Improved current working directory detection and added specific /home/jdube/caseScope7 fallback for git clone workflow",
    "7.1.17": "Bugfix - Fixed OpenSearch 2.11.1 discovery compatibility, replaced deprecated discovery.zen.* with cluster.initial_master_nodes and discovery.seed_hosts",
    "7.1.18": "Bugfix - Removed cluster.initial_master_nodes conflicting with single-node discovery type, simplified to minimal single-node config",
    "7.1.19": "Enhancement - Extended OpenSearch startup monitoring to 3 minutes with real-time progress, log snippets, and educational messaging",
    "7.1.20": "Bugfix - Fixed installer hanging on OpenSearch startup by using --no-block flag and added detailed start command debugging",
    "7.1.21": "Bugfix - Fixed OpenSearch startup detection by using process monitoring instead of systemd status, changed service type from notify to simple",
    "7.1.22": "UI Enhancement - Fixed login functionality with proper database initialization, enhanced UI with modern 3D styling, gradients, shadows, and better visual hierarchy",
    "7.1.23": "Database Enhancement - Comprehensive database initialization based on install type (clean/upgrade/reindex), improved backup system, automatic admin account recovery",
    "7.1.24": "Debug Enhancement - Added comprehensive login debugging, forced database verification, debug routes, and detailed troubleshooting guidance",
    "7.1.25": "Service Enhancement - Added final database verification test to installer, enhanced casescope-web service with debug logging and detailed request tracking",
    "7.1.26": "UI Enhancement - Updated password change page to modern 3D styling, converted logout to styled button, ensured consistent design across all pages",
    "7.1.27": "UI Layout Enhancement - Moved logo to top of navigation sidebar with styled version badge, improved header padding and alignment for better text spacing",
    "7.1.28": "UI Spacing Optimization - Reduced excessive vertical padding across all pages, tightened form spacing, and eliminated negative space for more compact layout",
    "7.1.29": "UI Ultra-Compact - Further tightened sidebar logo spacing, reduced menu item padding, and minimized all navigation margins for maximum content space",
    "7.1.30": "UI Fine-Tuning - Reduced sidebar logo top padding from 10px to 5px (50% reduction) for optimal spacing and visual balance",
    "7.1.31": "Feature Complete - Case Management System with Case/CaseFile models, create/select/dashboard routes, case directories, and modern 3D UI",
    "7.1.32": "UI Polish - Simplified case table header styling, removed gradient for solid color background for cleaner appearance",
    "7.1.33": "File Upload System - Complete upload functionality with multi-file support (5 files, 3GB each), SHA256 hash verification, duplicate detection, MIME type detection, and file list management interface",
    "7.1.34": "File Management UI - Fixed upload container width, changed status to 'Uploaded/Pending Indexing', reorganized file list columns (Name, Date, Size, Uploader, Status, Actions), added role-based action buttons (Details, Re-index, Re-run Rules, Delete)",
    "7.1.35": "Bugfix - Fixed Python f-string escaping issue in delete button onclick handler causing database initialization failure",
    "7.1.36": "File Status UI - Fixed upload container overflow (max-width: 95%), updated status workflow (Uploaded/Pending → Indexing → Running Rules → Completed), added Events and Violations columns to file list, prepared for progress bar display",
    "7.1.37": "Bugfix - Fixed inconsistent upload directory paths, standardized to /opt/casescope/uploads/{case_id} throughout codebase",
    "7.1.38": "EVTX Indexing System - Implemented Celery worker with EVTX parsing (python-evtx), OpenSearch bulk indexing with flattened event structure, real-time progress tracking, automatic task queuing on upload, systemd service integration, status transitions (Uploaded → Indexing → Running Rules → Completed)",
    "7.1.39": "Bugfix - Fixed Celery worker systemd service: added PIDFile directive, fixed ExecStop to use PID file instead of $MAINPID variable, added graceful shutdown with fallback",
    "7.1.40": "Feature - Implemented Re-index and Re-run Rules functionality: /file/reindex/<id> route resets file status and re-queues indexing, /file/rerun-rules/<id> route re-processes SIGMA rules, updated UI with confirmation dialogs, Re-index available for all files, Re-run Rules only for indexed files",
    "7.1.41": "Debug - Enhanced Celery worker logging: changed service Type to simple (from forking), added DEBUG log level, comprehensive signal handlers (worker_ready, worker_shutdown, task_prerun, task_postrun, task_failure), added ExecStartPre for directory creation, improved journalctl output with SyslogIdentifier, removed PID file complexity, added verbose logging to celery_app.py and tasks.py",
    "7.1.42": "Bugfix - Fixed Celery worker service ExecStartPre commands: use full paths (/bin/mkdir, /bin/chown, /bin/echo) instead of relying on shell PATH, added full PATH environment variable, changed ExecStop to use ExecStopPost for kill command",
    "7.1.43": "UI Enhancement - Added Case Dashboard to left menu (below System Dashboard), implemented real-time progress tracking: /api/file/progress/<id> endpoint, visual progress bars for Indexing/Running Rules status, auto-updating event counts, 3-second polling for active files, progress bar styling with gradients and animations, auto-reload on completion/failure",
    "7.1.44": "UI Polish - Fixed progress bar detection using data-file-id attributes, removed checkmarks/emojis from Completed/Failed status, improved button alignment with flexbox layout and consistent spacing, increased button font size to 13px, added console logging for progress debugging, reduced polling to 2 seconds, set minimum progress bar width to 5%, separate CSS classes for indexing-bar and rules-bar",
    "7.1.45": "Bugfix - Added missing jsonify import to Flask imports, fixes NameError in /api/file/progress/<id> endpoint",
    "7.1.46": "Bugfix - Added violation_count column to CaseFile model (default 0), added dynamic span IDs for event_count and violation_count for real-time updates, JavaScript now updates event/violation counts in table as indexing progresses, improved table cell vertical alignment, reduced action button cell padding for better visual balance",
    "7.1.47": "Migration - Added automatic database migration in init_db() function: checks if violation_count column exists in case_file table, adds it with ALTER TABLE if missing, uses SQLAlchemy inspect to detect existing columns, graceful error handling with rollback",
    "7.1.48": "Bugfix - Added estimated_event_count column to track total events for progress calculation, changed progress display to 'X / Y events' format, progress bar now shows accurate percentage based on current/estimated ratio, Running Rules status shows 100% progress bar, fixed button alignment with align-items: center in flexbox, API endpoint auto-calculates estimated_event_count if not set (1000 events/MB), added migration for estimated_event_count column",
    "7.1.49": "Enhancement - Added count_evtx_events Celery task that counts actual events before indexing: iterates through EVTX records once to get exact count, updates estimated_event_count with real value, then triggers indexing, shows 'Counting Events...' status during count, shows 'Preparing to Index...' when count complete, logs progress every 10k events, falls back to estimation on error, provides 100% accurate progress tracking",
    "7.1.50": "Enhancement - Added automatic page refresh every 5 seconds when files are processing: ensures status transitions are visible (Uploaded → Counting Events → Indexing → Running Rules → Completed), combined with 2-second progress bar updates for smooth real-time feedback, only refreshes when active files detected",
    "7.1.51": "Bugfix - Enhanced duplicate file detection feedback: shows warning emoji and original filename when duplicate detected, improved error message clarity, fixed auto-refresh detection to include 'Uploaded/Pending/Counting/Preparing' statuses, changed error message color to red when all files fail, ensures auto-refresh triggers immediately after upload",
    "7.1.52": "Bugfix - Added missing Case Dashboard link to upload form and file list navigation menus, changed 'Dashboard' to 'System Dashboard' for consistency across all pages",
    "7.1.53": "Enhancement - Added prominent flash message display to upload page: shows success/warning/error messages at top of content area with colored gradient backgrounds (green/orange/red), includes emoji icons (✅⚠️❌), dismissible with X button, smooth slide-in animation, properly displays duplicate file warnings and upload errors to users",
    "7.1.54": "Bugfix - Extended flash message display system to file list page: messages now persist through redirect from upload to file list, duplicate file warnings and upload errors appear prominently at top of file list with same styling (gradient backgrounds, icons, dismiss button), ensures users always see feedback after upload attempts",
    "7.1.55": "Feature Complete - Event Search Interface: /search route with OpenSearch integration, query_string parser supporting AND/OR/NOT/parentheses/wildcards/phrase matching, results table with Event ID/Timestamp/Computer/Channel/Provider columns, expandable row details showing full JSON event data, clickable field tags to build queries, pagination (50 results per page), collapsible query help with syntax examples, searches across all indexed files in active case, modern 3D UI matching application theme",
    "7.1.56": "Bugfix - Fixed search RequestError 400: Changed sort field from @timestamp (not indexed) to System_TimeCreated_SystemTime with unmapped_type fallback, added fallback timestamp detection (System_TimeCreated_SystemTime → @timestamp → TimeCreated → N/A), secondary sort by _score for relevance when timestamp unavailable",
    "7.1.57": "Enhancement - Smart field name mapping for user-friendly queries: EventID→System.EventID, Computer→System.Computer, Channel→System.Channel, Provider→System.Provider.Name, Level→System.Level, Task→System.Task; users can now type 'EventID:5000' instead of 'System.EventID:5000'; added 'Show All Events' query (*); updated help documentation with common field names and better examples",
    "7.1.58": "Bugfix - Fixed result display fields showing N/A: Updated field extraction to handle XML attribute notation (System.EventID.#text, System.TimeCreated.@SystemTime, System.Provider.@Name), fixed source filename extraction from _casescope_metadata, updated sort field to use correct timestamp path, updated field mappings for accurate queries, enhanced help documentation with Pro Tips emphasizing all data is searchable as plain text, added practical forensic examples (IPs, file paths, executables)",
    "7.1.59": "Bugfix - Removed timestamp sorting to fix RequestError 400: Text fields cannot be used for sorting in OpenSearch; changed to sort by relevance score (_score) instead, which is more appropriate for forensic searches where users want most relevant results first; all fields remain fully searchable as text for maximum flexibility",
    "7.1.60": "Enhancement - Implemented multi-field mapping for timeline sorting: System.TimeCreated.@SystemTime now indexed as text (searchable) + date (sortable) + keyword (exact match); EventID, Computer, Channel, Provider also get text + keyword subfields; added create_index_mapping() function that sets up proper field mappings before indexing; search now sorts by timestamp.date subfield (chronological timeline view) with relevance fallback; ALL fields remain fully text-searchable while key fields can also be sorted/filtered; re-index files to get timeline sorting",
    "7.1.61": "Enhancement - Added Event Type column with human-friendly descriptions: replaced Channel/Provider columns with single Event Type showing 'Successful Logon', 'Defender Signature Updated', 'Process Created', etc.; added get_event_description() function mapping 50+ common Event IDs to readable descriptions (Security 4624/4625/4688, System 1074/6008, PowerShell 4104, Defender 1151/2000/5007); fallback logic uses provider/channel for unknown events; fixed source_filename field mapping to _casescope_metadata.filename so clicking Source File tag adds correct search query; results table now shows Event ID, Timestamp, Event Type, Source File, Computer (5 columns)",
    "7.1.62": "Enhancement - Centralized sidebar menu system: created render_sidebar_menu() function to ensure consistent navigation across all pages, fixes menu items appearing/disappearing bug; expanded Event ID database to 100+ events from Ultimate Windows Security Encyclopedia (https://www.ultimatewindowssecurity.com/securitylog/encyclopedia/) including Security events (4624-4781, group management, firewall, Kerberos), System events (1074, 6005-6013, 7034-7045), PowerShell (4103-4106, 800, 403, 600), Defender (1000-5012 - scans, malware, definitions, real-time protection, tamper); fixed query preservation in search box by using parameter copy in build_opensearch_query() so original user query stays visible after clicking field tags",
    "7.1.63": "Enhancement - Added Management menu items: '📋 Update SIGMA Rules' placeholder for future SIGMA rule management interface, '🔄 Update Event ID Database' placeholder for automated Event ID database updates from Ultimate Windows Security Encyclopedia; both items styled as Coming Soon in centralized menu system",
    "7.1.64": "Bugfix - Completed centralized menu migration: updated System Dashboard, Case Dashboard, and Case Selection pages to use render_sidebar_menu() function; all 6 pages (System Dashboard, Case Dashboard, Case Selection, Upload Files, List Files, Search Events) now use centralized menu ensuring consistent navigation with new SIGMA Rules and Event ID Database menu items visible everywhere",
    "7.1.65": "Enhancement - Updated dashboards with real-time statistics: System Dashboard now shows live counts (total cases, files, events, users, storage, violations), Recent Cases and Recent File Uploads sections, active features indicator; Case Dashboard shows case-specific stats (files indexed/processing, total events, storage used, SIGMA violations), replaced placeholder 'Coming Soon' text with working numbers; both dashboards highlight operational features (Case Management ✓, File Upload ✓, EVTX Indexing ✓, Event Search ✓)",
    "7.1.66": "Feature Complete - SIGMA Rules Engine: Added SigmaRule and SigmaViolation database models with full relationship mapping; created /sigma-rules management interface with upload, enable/disable, view, and delete functionality; implemented 5 built-in detection rules (suspicious PowerShell, Mimikatz, network logon, Defender disabled, failed logons); automatic rule loading on database initialization; YAML file upload with duplicate detection via SHA256 hash; rule statistics dashboard showing total/enabled rules and violation counts; expandable rule details with YAML viewer; updated navigation menu to show active SIGMA Rules link",
    "7.1.67": "Feature Complete - Full SIGMA Detection Pipeline: Implemented SigmaHQ rule downloader (downloads 3000+ rules from GitHub via git clone); created comprehensive pySigma field mapping pipeline (70+ field mappings from Sigma standard → caseScope flattened EVTX structure); built rule execution engine in tasks.py using pySigma OpensearchBackend with custom processing pipeline; automatic SIGMA rule processing after EVTX indexing with violation detection and tracking; created violations viewer page (/violations) with severity filtering (critical/high/medium/low), rule/file filtering, review status tracking, paginated results, expandable violation details showing full event data; violation review system with notes and analyst tracking; added 🚨 SIGMA Violations to navigation menu; full integration with existing indexing workflow (Uploaded → Counting → Indexing → Running Rules → Completed)",
    "7.1.68": "Bugfix - Fixed pyparsing dependency version conflict: pinned pyparsing==3.0.9 in requirements.txt to resolve ImportError (cannot import 'List' from pyparsing) that was preventing Celery worker from starting; newer pyparsing versions (3.1.0+) removed the List class that pySigma 0.10.9 depends on",
    "7.1.69": "Bugfix - Fixed pySigma backend class name: changed OpensearchBackend to OpensearchLuceneBackend in tasks.py for compatibility with pysigma-backend-opensearch 1.0.1; the backend module reorganized class names and OpensearchLuceneBackend is the correct import for Lucene query syntax generation",
    "7.1.70": "Bugfix - Fixed SIGMA navigation menu styling: added missing .menu-item and .menu-title CSS styles to SIGMA Rules and Violations pages' embedded stylesheets; menu links now render as styled buttons instead of plain text links; matches styling of other pages",
    "7.1.71": "Bugfix - Fixed Re-run Rules progress tracking: added 'Running Rules' status to JavaScript activeFiles detection so progress bars and auto-refresh work when manually re-running SIGMA rules; previously only detected Uploaded/Pending/Counting/Preparing statuses",
    "7.1.72": "Enhancement - Improved Re-run Rules functionality: added deletion of existing violations before re-running rules to prevent duplicates, enhanced task queuing with task ID logging and full traceback on errors in main.py, added verbose logging to process_sigma_rules Celery task (task ID, file details, case info, rule processing steps) for easier debugging via journalctl -u casescope-worker -f",
    "7.1.73": "Bugfix - Fixed sigma_rules route using incorrect render_template('sigma_rules.html') call instead of inline render_sigma_rules_page() function; was causing werkzeug.routing.exceptions.BuildError server error due to missing template file and base.html reference to non-existent system_dashboard endpoint",
    "7.1.74": "Bugfix - Fixed SIGMA rules download failing with 'No such file or directory: git' error by using full path /usr/bin/git in subprocess.run call instead of relying on PATH environment variable in web service",
    "7.1.75": "Bugfix - Fixed Celery worker ExecStop error 'Referenced but unset environment variable MAINPID' by replacing ExecStopPost with proper ExecStop using celery control shutdown command; Type=simple doesn't support MAINPID variable",
    "7.1.76": "Critical Fix - Fixed Celery tasks never reaching worker: main.py was importing tasks directly creating separate disconnected Celery app instances; now imports celery_app and uses send_task() method to queue tasks to the same Redis broker that worker monitors; this fixes file upload indexing, re-index, and re-run rules functionality",
    "7.1.77": "Enhancement - Added search functionality to SIGMA Rules page: search box filters rules by title, level, or category with case-insensitive partial matching; includes clear button to reset search; built-in threat hunting rules auto-enabled on first load for immediate use"
  }
}